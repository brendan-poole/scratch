# Copyright 2006 by Sean Luke and George Mason University
# Licensed under the Academic Free License version 3.0
# See the file "LICENSE" for more information

parent.0 = ../../koza.params


# Stolen from koza/params -- overwriting just
# a little for readability
# You need to create at least one function set, 
# called "f0", which your first tree will use.  

gp.fs.size = 1
gp.fs.0.name = f0
gp.fs.0.info = ec.gp.GPFuncInfo
gp.fs.0.size = 9
gp.fs.0.func.0 = ec.app.betting.func.Add
gp.fs.0.func.0.nc = nc2
gp.fs.0.func.1 = ec.app.betting.func.Mul
gp.fs.0.func.1.nc = nc2
gp.fs.0.func.2 = ec.app.betting.func.Sub
gp.fs.0.func.2.nc = nc2
gp.fs.0.func.3 = ec.app.betting.func.Div
gp.fs.0.func.3.nc = nc2
gp.fs.0.func.4 = ec.app.betting.func.Sin
gp.fs.0.func.4.nc = nc1
gp.fs.0.func.5 = ec.app.betting.func.Exp
gp.fs.0.func.5.nc = nc1
gp.fs.0.func.6 = ec.app.betting.func.Log
gp.fs.0.func.6.nc = nc1
gp.fs.0.func.7 = ec.app.betting.func.RegERC
gp.fs.0.func.7.nc = nc0
gp.fs.0.func.8 = ec.app.betting.func.BestBackAmount
gp.fs.0.func.8.nc = nc0

#
# We specify our problem here
#

eval.problem = ec.app.betting.BettingProblem
eval.problem.data = ec.app.betting.BettingData

# ADFs use the same data type typically -- we need to include
# this even if we're not implementing ADFs
eval.problem.stack.context.data = ec.app.betting.BettingData

# The size of our training set, by default, is 20
eval.problem.size = 20
generations = 10000

stat.num-children = 2
stat.child.0 = ec.app.gui.SimpleXYSeriesChartStatistics
stat.child.0.title = Actual vs GP
stat.child.0.x-axis-label = day
stat.child.0.y-axis-label = price

stat.child.1 = ec.app.gui.SimpleXYSeriesChartStatistics
stat.child.1.title = Best of Generation
stat.child.1.x-axis-label = generation
stat.child.1.y-axis-label = fitness

pop.subpop.0.species.fitness = ec.app.betting.BettingFitness
